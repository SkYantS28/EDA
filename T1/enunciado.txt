Exerc√≠cio 01
    Desenvolva um algoritmo que seja capaz de resolver um sistema de equa√ß√µes lineares abaixo

        y = 0.5x + 0.5
        y = ‚àíx + 2

    Como resultado, sua sa√≠da devera apresentar o resultado do sistema de equa√ß√µes e plotar as equa√ß√µes, o ponto x,y

Exerc√≠cio 02
    O problema que usaremos √© bem conhecido e bastante simples.
    
    Queremos resolver uma equa√ß√£o de segundo grau, ou seja, dada a equa√ß√£o :

        ùíÇùíôùüê + ùíÉùíô + ùíÑ,

    queremos saber quais s√£o as suas ra√≠zes reais, se elas existirem.
    
    Desta forma, resolva a fun√ß√£o 2ùë•ÀÜ2 + 2ùë• ‚àí 6.

Exerc√≠cios 03

    Encontrando um ponto dentro de uma Fun√ß√£o
    N|Solid

    Como engenheiro de software voce recebeu a miss√£o de encontrar o valor aproximado de ( x ) que faz com que uma determinada fun√ß√£o ( f(x) ) seja igual a zero.

    Para isso, como explicado nas aulas anteriores voc√™ sabe que o valor dever√° ser investigado dentro de um intervalo ([a, b]), onde:

    ( f(a) ) e ( f(b) ) possuem sinais opostos (um √© positivo e o outro √© negativo).

    O seu objetivo √© criar um algoritmo que, a cada etapa, reduza esse intervalo at√© obter um valor de ( x ) com um erro aceit√°vel.

    Passos:
        Escolha um ponto m√©dio ( m ) entre ( a ) e ( b ).

        Avalie ( f(m) ).

        Se ( f(m) ) for suficientemente pr√≥ximo de zero, pare. Caso contr√°rio:
        
            Se ( f(m) ) e ( f(a) ) tiverem sinais opostos, ent√£o a raiz est√° entre ( a ) e ( m ), e voc√™ deve descartar ( b ).

            Caso contr√°rio, o valor de interesse est√° entre ( m ) e ( b ), e voc√™ deve descartar ( a ).

        Repita o processo at√© atingir a precis√£o desejada.

        Aplique esse m√©todo para encontrar este ponto na fun√ß√£o:

            [ f(x) = x^3 - x - 2 ]

        no intervalo ([1, 2]) com uma precis√£o de ( 10^{-4} ).

Exerc√≠cios 04
    Um engenheiro de automa√ß√£o capturou durante um per√≠odo de 30 dias Dados Clim√°ticos, diversos valores de temperatura, umidade e press√£o de um ambiente espec√≠fico.
    
    Sabendo que o acumulado de 24 horas foi a resultante de aporte de n ciclos de 10 minutos, calcule:

        Para todas as grandezas clim√°ticas, os valores m√≠nimos, m√°ximos, m√©dios em 24 horas de um do vig√©simo dia;
        
        A quantidade de ciclos por per√≠odo de coleta neste dia.

Exerc√≠cios 05
    Enunciado: √Årvore Geneal√≥gica

    Imagine que voc√™ recebeu a tarefa de criar uma √°rvore geneal√≥gica para uma fam√≠lia.
    
    A √°rvore deve ser capaz de armazenar informa√ß√µes sobre v√°rias gera√ß√µes de uma fam√≠lia e suas rela√ß√µes.

    Requisitos:

        Modelo de Dados:

            Cada membro da fam√≠lia deve ser representado como um dicion√°rio contendo: nome, idade, sexo e uma lista de filhos.
            
            A lista de filhos de cada membro da fam√≠lia deve conter dicion√°rios representando cada filho.
            
            Fun√ß√µes a serem implementadas:

                adicionar_membro(nome, idade, sexo, pai=None):
                    
                    Adiciona um membro √† √°rvore geneal√≥gica.
                    
                    Se o pai for especificado, o membro √© adicionado como filho desse pai.
                    
                buscar_membro(nome):

                    Retorna o dicion√°rio representando o membro da fam√≠lia com o nome especificado. 
                
                descendentes(nome):
                    
                    Retorna uma lista de todos os descendentes do membro com o nome especificado.
                    
                    Esta fun√ß√£o deve ser implementada de forma recursiva. 
            
            Exemplo de Uso:

                Adicione um membro chamado "Jo√£o" com 70 anos.
                
                Adicione um filho para "Jo√£o" chamado "Carlos" com 50 anos.
                
                Adicione um filho para "Carlos" chamado "Pedro" com 30 anos.
                
                Adicione um filho para "Pedro" chamado "Lucas" com 10 anos.
                
                Ao chamar a fun√ß√£o descendentes("Jo√£o"), ela deve retornar uma lista contendo "Carlos", "Pedro" e "Lucas".
                
        Desafio Extra:

        Implemente uma fun√ß√£o antepassados(nome) que, dado o nome de um membro, retorna uma lista de todos os seus antepassados diretos (pai, av√¥, bisav√¥, etc.).
        
        Esta fun√ß√£o tamb√©m deve ser implementada de forma recursiva.
        
        Este enunciado exige que o aluno utilize listas para armazenar os filhos de cada membro, dicion√°rios para armazenar informa√ß√µes sobre cada membro e recursividade para buscar descendentes e antepassados.